name: Generate Git Tag
on:
  push:
    branches:
      - main
permissions: 
  write-all
jobs:
  fresh_deployment:
    name: Generate Git Tag
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'approved')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          echo "latest_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Generate new tag
        id: generate_tag
        run: |
          VERSION_PREFIX="v"
          echo $VERSION_PREFIX

          VERSION_MAJOR_MINOR=$(echo "${{ env.latest_tag }}" | sed 's/^v//')
          echo $VERSION_MAJOR_MINOR
          NEW_TAG=$((VERSION_MAJOR_MINOR + 1))
          echo "Generated new tag: $NEW_TAG"
          echo "NEW_TAG=$VERSION_PREFIX$NEW_TAG" >> $GITHUB_ENV

      - name: Push new tag
        if: ${{env.NEW_TAG != ''}}
        run: |
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release-${{ env.NEW_TAG }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
  bug_fix:
     runs-on: ubuntu-latest
     if: contains(github.event.head_commit.message, 'bug')
     steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: | 
          echo "${{github.event.head_commit.message}}"
          git fetch --tags
          echo "latest_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Generate new tag
        id: generate_tag
        run: |
          VERSION_PREFIX="v"
          echo $VERSION_PREFIX
          echo 
          tag="${{ env.latest_tag }}"

          IFS="." read -ra tag_parts <<< "$tag"

          if [[ ${#tag_parts[@]} -gt 1 ]]; then
            # Increment second position value
            second_value="${tag_parts[1]}"
            new_second_value=$((second_value + 1))
            new_tag="${tag_parts[0]}.${new_second_value}"
          else
            # Append with 1
            new_tag="${tag}.1"
          fi

          echo "New tag: $new_tag"  # Output the new tag

          git tag $new_tag
          git push origin $new_tag

      